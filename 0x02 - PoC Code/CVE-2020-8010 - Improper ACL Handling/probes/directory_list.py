'''

directory_list: probe to get a directory listing

'''

from probes.dependencies import *

def generate_probe(directory):

  directory += "\x00"

  packet_header = "nimbus/1.0 {:d} {:d}\r\n"
  packet_body = (
  "mtype\x00"
  "7\x004\x00100\x00"
  "cmd\x00"
  "7\x0015\x00"
  "directory_list\x00"
  "seq\x00"
  "1\x002\x000\x00"
  "ts\x00"
  "1\x0011\x001571292687\x00"
  "frm\x00"
  )
  packet_body += "7\x00{:d}\x00".format(len(CLIENT))
  packet_body += CLIENT
  packet_body += (
  "tout\x00"
  "1\x004\x00180\x00"
  "addr\x00"
  "7\x000\x00"
  )

  packet_args  = "directory\x00"
  packet_args += "7\x00{:d}\x00".format(len(directory))
  packet_args += directory
  packet_args += (
  "type\x00"
  "1\x002\x000\x00"
  "detail\x00"
  "1\x002\x001\x00"
  )

  packet_header = packet_header.format(
    len(packet_body),
    len(packet_args)
  )

  probe = packet_header + packet_body + packet_args

  return bytes(probe, 'utf-8')

def parse(response, directory):

  result = {"name": "", "date": "", "size": "", "type": ""}

  dank = 1

  try:
    dirlist = response.decode().split('\x00')
    index = dirlist.index("entry")
    final = dirlist[index+3:]
  except:
    dank = 0

  if dank == 0:
    return -1

  p_good("Probe successful\n")
  print(" Directory of %s\n" % directory)

  name  = 0
  ftime = 0
  size  = 0
  ftype = 0
  check = 0

  # WARNING HORRIBLE CODE AHEAD
  for i in range(len(final)):
    if name == 1:
      try:
        int(final[i])
      except:
        result["name"] = final[i]
        name = 0
        check += 1
    if size >= 1:
      if size == 3:
        result["size"] = final[i]
        size = 0
        check += 1
      else:
        size += 1
    if ftype >= 1:
      if ftype == 3:
        result["type"] = final[i]
        ftype = 0
        check += 1
      else:
        ftype += 1
    if ftime >= 1:
      if ftime == 3:
        result["date"] = final[i]
        ftime = 0
        check += 1
      else:
        ftime += 1

    if "name" in final[i]:
      name = 1
    if "size" in final[i]:
      size = 1
    if "type" in final[i]:
      ftype = 1
    if "last_modified" in final[i]:
      ftime = 1

    if check == 4:
      if result["type"] == '2':
        result["type"] = ""
      else:
        result["type"] = "<DIR>"
        result["size"] = ""

      try:
        timestamp = time.strftime('%m/%d/%Y %I:%-M %p', time.localtime(int(result["date"])))
      except:
        timestamp = "??/??/???? ??:?? ??"
        pass

      print("{:20} {:6} {:15} {:s}".format(
        timestamp,
        result["type"],
        result["size"],
        result["name"])
      )
      check = 0

def probe(host, port, directory):
  probe = generate_probe(directory)

  p_info("Sending directory_list probe to %s:%d" % (host, port))

  sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
  sock.settimeout(TIMEOUT)
  try:
    sock.connect((host, port))
    sock.send(probe)
    parse(sock.recv(4096), directory)
  except:
    p_error("Failed to connect to %s:%d" % (host, port))
